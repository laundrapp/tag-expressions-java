//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/tag-expressions-java/src/main/java/io/cucumber/tagexpressions/TagExpressionException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberTagexpressionsTagExpressionException")
#ifdef RESTRICT_IoCucumberTagexpressionsTagExpressionException
#define INCLUDE_ALL_IoCucumberTagexpressionsTagExpressionException 0
#else
#define INCLUDE_ALL_IoCucumberTagexpressionsTagExpressionException 1
#endif
#undef RESTRICT_IoCucumberTagexpressionsTagExpressionException

#if !defined (IoCucumberTagexpressionsTagExpressionException_) && (INCLUDE_ALL_IoCucumberTagexpressionsTagExpressionException || defined(INCLUDE_IoCucumberTagexpressionsTagExpressionException))
#define IoCucumberTagexpressionsTagExpressionException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class IOSObjectArray;
@class JavaLangThrowable;

@interface IoCucumberTagexpressionsTagExpressionException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message
               withNSObjectArray:(IOSObjectArray *)args;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberTagexpressionsTagExpressionException)

FOUNDATION_EXPORT void IoCucumberTagexpressionsTagExpressionException_initWithNSString_withNSObjectArray_(IoCucumberTagexpressionsTagExpressionException *self, NSString *message, IOSObjectArray *args);

FOUNDATION_EXPORT IoCucumberTagexpressionsTagExpressionException *new_IoCucumberTagexpressionsTagExpressionException_initWithNSString_withNSObjectArray_(NSString *message, IOSObjectArray *args) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoCucumberTagexpressionsTagExpressionException *create_IoCucumberTagexpressionsTagExpressionException_initWithNSString_withNSObjectArray_(NSString *message, IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberTagexpressionsTagExpressionException)

#endif

#pragma pop_macro("INCLUDE_ALL_IoCucumberTagexpressionsTagExpressionException")
